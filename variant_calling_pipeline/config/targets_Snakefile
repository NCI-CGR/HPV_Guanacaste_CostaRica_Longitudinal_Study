# vim: ft: ft=python

workdir: os.environ['PWD']
shell.executable('bash')

localrules: targets_all

WFTARGETS = []

# qc_Snakefile that includes fastqc reports
if 'qc_Snakefile' in config['workflows']:
    qc_targets = [
    expand('posttrim_qc/{sampleID}.filtered_fastqc.zip', sampleID=sampleIDs),
    ['reports/filtered_read_count.tsv'],
    expand(config['blank_archive'] + '/{new_blankID}.bam', new_blankID=new_blankIDs),
    ['flags/blank_qc.txt'],
    ]
    WFTARGETS += qc_targets

# variant_Snakefile runs TVC and annotates the vcfs.
if 'variant_Snakefile' in config['workflows']:
    variant_targets = [
    expand('reports/fasta/%s.HPV{hpv_type}.N-%d.passed_cov.fasta' %(config['project_name'], config['tree_fasta_n']), hpv_type=hpv_types),
    'reports/type_summary.tsv',
    'multiqc/snpeff_report.html', 
    'reports/%s_all_vcf_tables.txt' %config['project_name'] 
    ]
    WFTARGETS += variant_targets

# lowAF_Snakefile uses a somatic TVC json to look for low AF variants
if 'lowAF_Snakefile' in config['workflows']:
    lowaf_targets = [
    'reports/%s_all_vcf_tables_lowaf.txt' %config['project_name'],
    'reports/%s_lowaf_histogram.png' %config['project_name'],
    expand('lowaf_af_histo/{sample_only}.lowaf.png', sample_only=samples_only)
    ]
    WFTARGETS += lowaf_targets

rule targets_all:
    input: WFTARGETS


